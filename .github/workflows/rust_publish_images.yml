name: Publish Rust Container Image (Test)

env:
  PLATFORMS: linux/amd64,linux/arm64

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch: {}

jobs:
  check-version:
    name: Ensure GitHub Release & Cargo.toml Version Numbers Match
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Cargo Version Matches Tag
        uses: spice-labs-inc/action-check-version@main

  build_and_scan:
    name: Build, Export/Push Image per Rules, Always Run CLI Scans
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build project (Rust)
        run: cargo build --release

      - name: Compute build tag + publish guard
        id: guard
        shell: bash
        run: |
          # Derive image/tag used throughout
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME}"
          else
            TAG="test-${GITHUB_SHA::7}"
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

          # Is the ref a SemVer tag vX.Y.Z?
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_semver_tag=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_semver_tag=false" >> "$GITHUB_OUTPUT"
          fi

          # Is the current commit reachable from origin/main?
          git fetch --no-tags --prune origin +refs/heads/main:refs/remotes/origin/main
          if git merge-base --is-ancestor "${GITHUB_SHA}" origin/main; then
            echo "is_on_main=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_on_main=false" >> "$GITHUB_OUTPUT"
          fi

          # Publish only when both are true
          if [[ "$(cat "$GITHUB_OUTPUT")" == *"is_semver_tag=true"* && "$(cat "$GITHUB_OUTPUT")" == *"is_on_main=true"* ]]; then
            echo "publish=true" >> "$GITHUB_OUTPUT"
          else
            echo "publish=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Prepare artifact directories
        run: mkdir -p artifacts/docker

      # Login only if we are going to publish
      - name: Docker Hub login
        if: steps.guard.outputs.publish == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Non-publish path: export OCI tar (no push)
      - name: Build Docker image to OCI tar (no push)
        if: steps.guard.outputs.publish != 'true'
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: false
          tags: spicelabs/bigtent:${{ steps.guard.outputs.tag }}
          outputs: type=oci,dest=artifacts/docker/bigtent-${{ steps.guard.outputs.tag }}.oci.tar

      # Publish path: push image to registry (no tar export here)
      - name: Build and push Docker image (publish path)
        if: steps.guard.outputs.publish == 'true'
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: true
          tags: |
            spicelabs/bigtent:${{ steps.guard.outputs.tag }}
            spicelabs/bigtent:latest

      # Optional Maven build: 
      - name: Build with Maven if pom.xml present
        if: hashFiles('pom.xml') != ''
        run: mvn -B -ntp -DskipTests package

      # CLI scans always run; tags reflect artifact type
      - name: Scan & upload ADG (Docker artifacts)
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: artifacts/docker
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: docker-${{ steps.guard.outputs.tag }}

      - name: Scan & upload ADG (Maven target/)
        if: hashFiles('pom.xml') != ''
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: target
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: maven-${{ steps.guard.outputs.tag }}
