name: Publish Rust Container Image (Test)

env:
  PLATFORMS: linux/amd64,linux/arm64

on:
  push:
    tags: [ 'v*.*.*' ]
  workflow_dispatch: {}

jobs:
  check-version:
    name: Ensure GitHub Release & Cargo.toml Version Numbers Match
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Cargo Version Matches Tag
        uses: spice-labs-inc/action-check-version@main

  build_and_scan:
    name: Build, Export OCI tar, Conditionally Upload ADGs
    runs-on: ubuntu-24.04

    permissions:
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Checkout with full history (needed for branch check)
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build project (Rust)
        run: cargo build --release

      - name: Compute build tag
        id: tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME}"
          else
            TAG="test-${GITHUB_SHA::7}"
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

      - name: Prepare artifact directories
        run: mkdir -p artifacts/docker

      - name: Build Docker image to OCI tar (no push)
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: false
          tags: spicelabs/bigtent:${{ steps.tag.outputs.tag }}
          outputs: type=oci,dest=artifacts/docker/bigtent-${{ steps.tag.outputs.tag }}.oci.tar

      # Optional Maven build: local only
      - name: Build with Maven if pom.xml present
        if: hashFiles('pom.xml') != ''
        run: mvn -B -ntp -DskipTests package

      # ---- Branch gate: only upload when commit is on main ----
      - name: Determine if commit is on main
        id: branch_guard
        shell: bash
        run: |
          git fetch --no-tags --prune origin +refs/heads/main:refs/remotes/origin/main
          COMMIT="${GITHUB_SHA}"
          if git merge-base --is-ancestor "$COMMIT" origin/main; then
            echo "is_main=true" >> "$GITHUB_OUTPUT"
          else
            echo "is_main=false" >> "$GITHUB_OUTPUT"
          fi
          echo "Commit $COMMIT on main? ${{ steps.branch_guard.outputs.is_main }}"

      # Upload only when commit is on main
      - name: Scan & upload ADG (Docker OCI tar)
        if: steps.branch_guard.outputs.is_main == 'true'
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: artifacts/docker
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: docker-${{ steps.tag.outputs.tag }}

      - name: Scan & upload ADG (Maven target/)
        if: steps.branch_guard.outputs.is_main == 'true' && hashFiles('pom.xml') != ''
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: target
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: maven-${{ steps.tag.outputs.tag }}
