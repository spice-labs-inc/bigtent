name: Publish Rust Container Image

env:
  # canonical format is comma-separated with no spaces
  PLATFORMS: linux/amd64,linux/arm64

on:
  push:
    tags: [ 'v*.*.*' ]  # Trigger only on semantic version tags
  workflow_dispatch: {}  # Manual trigger

jobs:
  check-version:
    name: Ensure GitHub Release & Cargo.toml Version Numbers Match
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Cargo version matches tag
        uses: spice-labs-inc/action-check-version@main

  build_scan_publish:
    name: Build, Scan, Save Artifacts, Conditionally Push
    runs-on: ubuntu-24.04
    needs: check-version
    # run if check-version succeeded OR was skipped (e.g., manual runs); still skip on failure/cancel
    if: ${{ needs.check-version.result == 'success' || needs.check-version.result == 'skipped' }}

    permissions:
      contents: write
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: Checkout with LFS and full history
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0  # needed for main ancestry check

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build project (Rust)
        run: cargo build --release

      - name: Save binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: bigtent-binary-${{ github.sha }}
          path: target/release/bigtent
          if-no-files-found: error
          retention-days: 7

      - name: Collect build outputs into artifacts/
        run: |
          mkdir -p artifacts/binaries artifacts/docker
          cp target/release/bigtent artifacts/binaries/

      # Guard 1: is the tagged commit on main?
      - name: Check if tag commit is on main
        id: is_main
        shell: bash
        run: |
          git fetch --no-tags --prune origin +refs/heads/main:refs/remotes/origin/main
          if git merge-base --is-ancestor "${GITHUB_SHA}" origin/main; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
          fi

      # Guard 2: is the ref a SemVer tag vX.Y.Z ?
      - name: Check if ref is SemVer vX.Y.Z
        id: is_semver
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "result=true" >> "$GITHUB_OUTPUT"
          else
            echo "result=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Log in to Docker Hub (only for publish)
        if: ${{ steps.is_main.outputs.result == 'true' && steps.is_semver.outputs.result == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME || secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN || secrets.DOCKER_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: spicelabs/bigtent
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,value=sha-${{ github.sha }}
          flavor: |
            latest=auto

      # Build and push on allowed publishes
      - name: Build and push image
        if: ${{ steps.is_main.outputs.result == 'true' && steps.is_semver.outputs.result == 'true' }}
        id: build_push
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: true
          provenance: mode=max
          sbom: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"

      # Save pushed image as OCI (pull what we just pushed)
      - name: Save pushed image as OCI tar
        if: ${{ steps.is_main.outputs.result == 'true' && steps.is_semver.outputs.result == 'true' }}
        run: |
          image_tag=$(echo "${{ steps.meta.outputs.tags }}" | head -n1)
          docker pull "$image_tag"
          docker save "$image_tag" > artifacts/docker/bigtent-${{ github.sha }}.oci.tar

      # Build without push and export OCI tar on test/pre-release runs
      - name: Build image (no push) and export OCI tar
        if: ${{ !(steps.is_main.outputs.result == 'true' && steps.is_semver.outputs.result == 'true') }}
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: false
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"
          # Buildx requires an ABSOLUTE path for dest:
          outputs: type=oci,dest=${{ github.workspace }}/artifacts/docker/bigtent-${{ github.sha }}.oci.tar

      - name: Generate artifact attestation
        if: ${{ steps.is_main.outputs.result == 'true' && steps.is_semver.outputs.result == 'true' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          subject-digest: ${{ steps.build_push.outputs.digest }}
          push-to-registry: true

      - name: Upload OCI tar artifact
        uses: actions/upload-artifact@v4
        with:
          name: oci-image-${{ github.sha }}
          path: artifacts/docker/*.oci.tar
          if-no-files-found: error
          retention-days: 7

      - name: Upload combined build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: artifacts/**
          if-no-files-found: warn
          retention-days: 7

      # --- Spice Labs CLI scan across ALL artifacts ---
      - name: Scan & upload ADG (all artifacts)
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: ${{ github.workspace }}/artifacts
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: bigtent
