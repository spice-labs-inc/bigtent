name: Publish Rust Container Image  # bigtent

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

permissions:
  contents: write
  packages: write
  id-token: write
  attestations: write

env:
  REPO: ${{ github.event.repository.name }}
  PLATFORMS: linux/amd64,linux/arm64

jobs:
  check-version:
    name: Ensure Cargo version matches tag
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Check Cargo version matches tag
        uses: spice-labs-inc/action-check-version@main

  build_and_scan:
    name: Build on main and scan artifacts
    if: ${{ github.ref_type == 'branch' && github.ref_name == 'main' }}
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2
      - name: Build
        run: cargo build --release
      - name: Run Spice-Labs CLI scan
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          spice_pass: "${{ secrets.SPICE_PASS }}"
          file_path: "${{ github.workspace }}/target"
          tag: "${{ github.event.repository.name }}"

  release_build_push:
    name: Build on tag and push to Docker Hub
    if: ${{ github.ref_type == 'tag' }}
    runs-on: ubuntu-24.04
    needs: check-version
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if tag commit is on main
        id: on_main
        shell: bash
        run: |
          set -euo pipefail
          git fetch --no-tags origin +refs/heads/main:refs/remotes/origin/main
          if git merge-base --is-ancestor "${GITHUB_SHA}" "origin/main"; then
            echo "ok=true" >> "$GITHUB_OUTPUT"
          else
            echo "ok=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release

      - name: Log in to Docker Hub
        if: ${{ steps.on_main.outputs.ok == 'true' }}
        uses: docker/login-action@v3
        with:
          username: "${{ secrets.DOCKERHUB_USERNAME }}"
          password: "${{ secrets.DOCKERHUB_TOKEN }}"

      - name: Extract Docker image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: spicelabs/bigtent
          tags: |
            type=semver,pattern={{version}}
          flavor: |
            latest=false

      - name: Build and push Docker image
        id: build_image
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: ${{ steps.on_main.outputs.ok == 'true' }}
          sbom: true
          provenance: true
          tags: "${{ steps.meta.outputs.tags }}"
          labels: "${{ steps.meta.outputs.labels }}"

      - name: Generate build provenance attestation
        if: ${{ steps.on_main.outputs.ok == 'true' }}
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: docker.io/spicelabs/bigtent
          subject-digest: ${{ steps.build_image.outputs.digest }}
          push-to-registry: true

      - name: Gather build outputs for scanning
        run: |
          set -euo pipefail
          mkdir -p artifacts/target
          rsync -a --delete "target/release/" "artifacts/target/"

      - name: Run Spice-Labs CLI scan
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          spice_pass: "${{ secrets.SPICE_PASS }}"
          file_path: "artifacts"
          tag: "${{ github.event.repository.name }}"
