name: Publish Rust Container Image (Test)

env:
  PLATFORMS: linux/amd64,linux/arm64

on:
  push:
    tags: [ 'v*.*.*' ]  # Still supports tagged runs
  workflow_dispatch: {}  # Manual trigger for testing

jobs:
  check-version:
    name: Ensure GitHub Release & Cargo.toml Version Numbers Match
    # Runs on tag pushes; will be skipped on manual runs that aren't tags
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check Cargo Version Matches Tag
        uses: spice-labs-inc/action-check-version@main

  build_and_scan:
    name: Build, Export OCI tar, Then Scan & Upload ADGs
    runs-on: ubuntu-24.04
    needs: [check-version]

    permissions:
      contents: read
      attestations: write
      id-token: write

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Checkout with LFS
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build project (Rust)
        run: cargo build --release

      - name: Determine build tag for artifacts
        id: tag
        shell: bash
        run: |
          if [[ "${GITHUB_REF_TYPE}" == "tag" ]]; then
            TAG="${GITHUB_REF_NAME}"
          else
            TAG="test-${GITHUB_SHA::7}"
          fi
          echo "tag=${TAG}" >> "$GITHUB_OUTPUT"

      - name: Prepare artifact directories
        run: mkdir -p artifacts/docker

      # Build but DO NOT PUSH: export as an OCI tar we can scan
      - name: Build Docker image to OCI tar (no push)
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.PLATFORMS }}
          context: .
          push: false
          # Optional: annotate the image with a local tag (useful metadata)
          tags: spicelabs/bigtent:${{ steps.tag.outputs.tag }}
          # Export an OCI layout tar for scanning
          outputs: type=oci,dest=artifacts/docker/bigtent-${{ steps.tag.outputs.tag }}.oci.tar

      # Optional Maven build: only if this repo has a pom.xml
      - name: Build with Maven if pom.xml present
        if: hashFiles('pom.xml') != ''
        run: mvn -B -ntp -DskipTests package

      # Scan & upload ADG for the Docker image tar
      - name: Scan & upload ADG (Docker OCI tar)
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: artifacts/docker
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: docker-${{ steps.tag.outputs.tag }}

      # Scan & upload ADG for Maven build output (if any)
      - name: Scan & upload ADG (Maven target/)
        if: hashFiles('pom.xml') != ''
        uses: spice-labs-inc/action-spice-labs-cli-scan@v3
        with:
          file_path: target
          spice_pass: ${{ secrets.SPICE_PASS }}
          tag: maven-${{ steps.tag.outputs.tag }}

